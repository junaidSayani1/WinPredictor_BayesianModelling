// <auto-generated />
using Dota2WinPredictor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dota2WinPredictor.Migrations
{
    [DbContext(typeof(MyAppContext))]
    [Migration("20250908163059_schema update")]
    partial class schemaupdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dota2WinPredictor.Models.HeroDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("AdjustedWinRate")
                        .HasColumnType("float");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("LogOdds")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PickCount")
                        .HasColumnType("int");

                    b.Property<string>("Potrait")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WinCount")
                        .HasColumnType("int");

                    b.Property<double?>("WinRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("HeroDTOs");
                });
#pragma warning restore 612, 618
        }
    }
}
